// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace Eigen;

// setuplambdaMVR_colwise
VectorXd setuplambdaMVR_colwise(MatrixXd Y, MatrixXd Z, int nlam, VectorXd setlam);
RcppExport SEXP _pqr_setuplambdaMVR_colwise(SEXP YSEXP, SEXP ZSEXP, SEXP nlamSEXP, SEXP setlamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< int >::type nlam(nlamSEXP);
    Rcpp::traits::input_parameter< VectorXd >::type setlam(setlamSEXP);
    rcpp_result_gen = Rcpp::wrap(setuplambdaMVR_colwise(Y, Z, nlam, setlam));
    return rcpp_result_gen;
END_RCPP
}
// setuplambdaMVR_lasso
MatrixXd setuplambdaMVR_lasso(MatrixXd Y, MatrixXd Z1, int nlam, VectorXd setlam);
RcppExport SEXP _pqr_setuplambdaMVR_lasso(SEXP YSEXP, SEXP Z1SEXP, SEXP nlamSEXP, SEXP setlamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type Z1(Z1SEXP);
    Rcpp::traits::input_parameter< int >::type nlam(nlamSEXP);
    Rcpp::traits::input_parameter< VectorXd >::type setlam(setlamSEXP);
    rcpp_result_gen = Rcpp::wrap(setuplambdaMVR_lasso(Y, Z1, nlam, setlam));
    return rcpp_result_gen;
END_RCPP
}
// EstMVR_colwise
List EstMVR_colwise(MatrixXd Y, MatrixXd Z, MatrixXd W, VectorXd lambda, List optsList, List optsList_pen);
RcppExport SEXP _pqr_EstMVR_colwise(SEXP YSEXP, SEXP ZSEXP, SEXP WSEXP, SEXP lambdaSEXP, SEXP optsListSEXP, SEXP optsList_penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type W(WSEXP);
    Rcpp::traits::input_parameter< VectorXd >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type optsList(optsListSEXP);
    Rcpp::traits::input_parameter< List >::type optsList_pen(optsList_penSEXP);
    rcpp_result_gen = Rcpp::wrap(EstMVR_colwise(Y, Z, W, lambda, optsList, optsList_pen));
    return rcpp_result_gen;
END_RCPP
}
// EstMVR_lasso
List EstMVR_lasso(MatrixXd Y, MatrixXd Z1, MatrixXd W, MatrixXd lambda, List optsList, List optsList_pen);
RcppExport SEXP _pqr_EstMVR_lasso(SEXP YSEXP, SEXP Z1SEXP, SEXP WSEXP, SEXP lambdaSEXP, SEXP optsListSEXP, SEXP optsList_penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type Z1(Z1SEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type W(WSEXP);
    Rcpp::traits::input_parameter< MatrixXd >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type optsList(optsListSEXP);
    Rcpp::traits::input_parameter< List >::type optsList_pen(optsList_penSEXP);
    rcpp_result_gen = Rcpp::wrap(EstMVR_lasso(Y, Z1, W, lambda, optsList, optsList_pen));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pqr_setuplambdaMVR_colwise", (DL_FUNC) &_pqr_setuplambdaMVR_colwise, 4},
    {"_pqr_setuplambdaMVR_lasso", (DL_FUNC) &_pqr_setuplambdaMVR_lasso, 4},
    {"_pqr_EstMVR_colwise", (DL_FUNC) &_pqr_EstMVR_colwise, 6},
    {"_pqr_EstMVR_lasso", (DL_FUNC) &_pqr_EstMVR_lasso, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_pqr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
